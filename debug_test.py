#!/usr/bin/env python3
"""
Script para testar a inicializa√ß√£o do servidor MCP
"""

import sys
import os

def test_imports():
    """Testa se todas as importa√ß√µes est√£o funcionando corretamente"""
    print("Testando importa√ß√µes...")
    
    try:
        import json
        print("‚úì json importado com sucesso")
    except Exception as e:
        print(f"‚úó Erro ao importar json: {e}")
        return False
    
    try:
        from watchdog.observers import Observer
        print("‚úì watchdog.observers importado com sucesso")
    except Exception as e:
        print(f"‚úó Erro ao importar watchdog.observers: {e}")
        return False
    
    try:
        from watchdog.events import FileSystemEventHandler
        print("‚úì watchdog.events importado com sucesso")
    except Exception as e:
        print(f"‚úó Erro ao importar watchdog.events: {e}")
        return False
    
    try:
        from code_indexer import index_code, search_code, search_cache
        print("‚úì code_indexer importado com sucesso")
    except Exception as e:
        print(f"‚úó Erro ao importar code_indexer: {e}")
        return False
    
    try:
        from src.utils.dev_history import dev_history_manager
        print("‚úì dev_history importado com sucesso")
    except Exception as e:
        print(f"‚úó Erro ao importar dev_history: {e}")
        return False
    
    try:
        from src.utils.embeddings import embedding_model
        print("‚úì embeddings importado com sucesso")
    except Exception as e:
        print(f"‚úó Erro ao importar embeddings: {e}")
        return False
    
    try:
        from src.utils.search_cache import search_cache as sc
        print("‚úì search_cache importado com sucesso")
    except Exception as e:
        print(f"‚úó Erro ao importar search_cache: {e}")
        return False
    
    return True

def test_model_loading():
    """Testa se o modelo de embeddings carrega corretamente"""
    print("\nTestando carregamento do modelo...")
    
    try:
        from src.utils.embeddings import embedding_model
        if embedding_model.model is not None:
            print("‚úì Modelo de embeddings carregado com sucesso")
            # Testar gera√ß√£o de embedding
            test_text = "Teste de embedding"
            embedding = embedding_model.embed_text(test_text)
            if embedding is not None:
                print(f"‚úì Embedding gerado com sucesso (dimens√£o: {len(embedding)})")
            else:
                print("‚úó Falha ao gerar embedding")
                return False
        else:
            print("‚úó Modelo de embeddings n√£o foi carregado")
            return False
    except Exception as e:
        print(f"‚úó Erro ao carregar modelo de embeddings: {e}")
        return False
    
    return True

def main():
    """Fun√ß√£o principal de teste"""
    print("=== Teste de Inicializa√ß√£o do Servidor MCP ===\n")
    
    # Testar importa√ß√µes
    if not test_imports():
        print("\n‚ùå Teste de importa√ß√µes falhou")
        return 1
    
    print("\n‚úÖ Todos os m√≥dulos importados com sucesso")
    
    # Testar carregamento do modelo
    if not test_model_loading():
        print("\n‚ùå Teste de carregamento do modelo falhou")
        return 1
    
    print("\n‚úÖ Modelo de embeddings carregado com sucesso")
    
    print("\nüéâ Todos os testes passaram! O servidor MCP deve iniciar corretamente.")
    return 0

if __name__ == "__main__":
    sys.exit(main())