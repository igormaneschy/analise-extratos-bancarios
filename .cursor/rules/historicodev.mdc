---
description: Hist√≥rico de desenvolvimento padronizado (dev_history.md)
globs: *
alwaysApply: true
---

## Objetivo
Garantir que toda altera√ß√£o relevante em arquivos de c√≥digo seja registrada de forma padronizada em um arquivo de hist√≥rico no reposit√≥rio, facilitando auditoria, rastreabilidade e fornecendo contexto cont√≠nuo para agentes e pessoas.

Arquivo de hist√≥rico recomendado: **dev_history.md** na raiz do projeto.

## üöÄ Quick Start

### **Comandos de Automa√ß√£o:**
```bash
# Gerar entrada autom√°tica
./scripts/generate_history_entry.sh "feat: adiciona nova funcionalidade"

# Validar hist√≥rico
./scripts/validate_history.sh

# Gerar relat√≥rio de mudan√ßas
./scripts/generate_changes_report.sh
```

### **Templates R√°pidos:**
```bash
# Bug fix
./scripts/new_entry.sh bug "Corrige parsing de valores negativos"

# Nova funcionalidade
./scripts/new_entry.sh feat "Adiciona suporte a Excel"

# Refatora√ß√£o
./scripts/new_entry.sh refactor "Melhora arquitetura de readers"
```

## Como aplicar
Sempre que um arquivo de c√≥digo for criado, alterado, movido ou removido, adicione uma nova entrada ao in√≠cio do arquivo de hist√≥rico usando o template abaixo.
Nunca deletar linhas, sempre dever ser inserida informa√ß√£o nova ao in√≠cio do arquivo.



Para registrar a data automaticamente:
- **macOS/Linux**: `date +"%Y-%m-%d"`

## Template da entrada
```
[{{DATA_ATUAL}}] - {{NOME_AUTOR}}
Arquivos: {{LISTA_ARQUIVOS_RELATIVOS_A_RAIZ}}
A√ß√£o/Tipo: [Corre√ß√£o | Melhoria | Refatora√ß√£o | Bug | Documenta√ß√£o | Configura√ß√£o | Teste]
Descri√ß√£o: {{BREVE_DESCRICAO_EM_AT√â_2_LINHAS}}
Detalhes:
Problema: {{PROBLEMA_IDENTIFICADO}}
Causa: {{CAUSA_RAIZ}}
Solu√ß√£o: {{SOLUCAO_IMPLEMENTADA}}
Observa√ß√µes: {{OBSERVACOES_EXTRAS}}

```

## üìã Templates Espec√≠ficos

### **Template para Bug Fix:**
```
[{{DATA_ATUAL}}] - {{NOME_AUTOR}}
Arquivos: {{LISTA_ARQUIVOS_RELATIVOS_A_RAIZ}}
A√ß√£o/Tipo: Bug
Descri√ß√£o: Corrige {{PROBLEMA_ESPEC√çFICO}} em {{COMPONENTE}}
Detalhes:
Problema: {{DESCRI√á√ÉO_DETALHADA_DO_BUG}}
Causa: {{AN√ÅLISE_DA_CAUSA_RAIZ}}
Solu√ß√£o: {{IMPLEMENTA√á√ÉO_DA_CORRE√á√ÉO}}
Observa√ß√µes: {{TESTES_REALIZADOS_E_VALIDA√á√ïES}}

```

### **Template para Nova Funcionalidade:**
```
[{{DATA_ATUAL}}] - {{NOME_AUTOR}}
Arquivos: {{LISTA_ARQUIVOS_RELATIVOS_A_RAIZ}}
A√ß√£o/Tipo: Melhoria
Descri√ß√£o: Implementa {{FUNCIONALIDADE}} para {{OBJETIVO}}
Detalhes:
Problema: {{NECESSIDADE_OU_REQUISITO}}
Causa: {{MOTIVA√á√ÉO_PARA_A_IMPLEMENTA√á√ÉO}}
Solu√ß√£o: {{DESCRI√á√ÉO_DA_IMPLEMENTA√á√ÉO}}
Observa√ß√µes: {{COBERTURA_DE_TESTES_E_DOCUMENTA√á√ÉO}}

```

### **Template para Refatora√ß√£o:**
```
[{{DATA_ATUAL}}] - {{NOME_AUTOR}}
Arquivos: {{LISTA_ARQUIVOS_RELATIVOS_A_RAIZ}}
A√ß√£o/Tipo: Refatora√ß√£o
Descri√ß√£o: Refatora {{COMPONENTE}} para {{MELHORIA}}
Detalhes:
Problema: {{PROBLEMA_DE_QUALIDADE_OU_MAINTENIBILIDADE}}
Causa: {{AN√ÅLISE_DO_PROBLEMA_ATUAL}}
Solu√ß√£o: {{IMPLEMENTA√á√ÉO_DA_REFATORA√á√ÉO}}
Observa√ß√µes: {{M√âTRICAS_DE_MELHORIA_E_VALIDA√á√ïES}}

```

### **Template para Testes:**
```
[{{DATA_ATUAL}}] - {{NOME_AUTOR}}
Arquivos: {{LISTA_ARQUIVOS_RELATIVOS_A_RAIZ}}
A√ß√£o/Tipo: Teste
Descri√ß√£o: Adiciona testes para {{FUNCIONALIDADE}} com cobertura de {{PERCENTUAL}}%
Detalhes:
Problema: {{FALTA_DE_COBERTURA_DE_TESTES}}
Causa: {{NECESSIDADE_DE_VALIDA√á√ÉO}}
Solu√ß√£o: {{IMPLEMENTA√á√ÉO_DOS_TESTES}}
Observa√ß√µes: {{TIPOS_DE_TESTE_E_CEN√ÅRIOS_COBERTOS}}

```

## Instru√ß√µes espec√≠ficas
- **Autor**: Use "Assistant" para altera√ß√µes automatizadas, seu nome para altera√ß√µes manuais
- **Arquivos**: Liste todos os arquivos impactados com paths relativos √† raiz do reposit√≥rio
- **Tipo**: Escolha um dos valores v√°lidos listados acima
- **Descri√ß√£o**: M√°ximo 2 linhas, seja espec√≠fico e claro
- **Detalhes**: Preencha todas as se√ß√µes quando aplic√°vel

## Conven√ß√µes de paths
Use sempre paths completos relativos √† raiz:
- `src/domain/models.py`
- `config/app.yaml`
- `tests/test_payment_flow.py`
- `scripts/data_migration_v3.py`

## Exemplo pr√°tico
```
[2025-08-13] - Assistant
Arquivos: src/services/transaction_analyzer.py, src/domain/models.py
A√ß√£o/Tipo: Melhoria
Descri√ß√£o: Implementa an√°lise de padr√µes de gasto com abordagem de ML.
Detalhes:
Problema: Regras atuais n√£o capturavam padr√µes complexos
Causa: Algoritmo baseado apenas em heur√≠sticas simples
Solu√ß√£o: Integra√ß√£o de modelo de detec√ß√£o de padr√µes e anomalias
Observa√ß√µes: Acur√°cia preliminar de 87% em dados de 6 meses
```

## Escopo de documenta√ß√£o

### ‚úÖ SEMPRE documentar:
- Altera√ß√µes em c√≥digo-fonte (src/, app/, lib/, etc.)
- Arquivos de entrada principal
- Configura√ß√µes (config/, .env.example sem segredos)
- Testes (tests/, test_*.py)
- Depend√™ncias (requirements.txt, pyproject.toml, package.json)
- Corre√ß√µes de bug em qualquer arquivo
- Migra√ß√µes (database/migrations/)

### ‚ùå N√ÉO documentar:
- Arquivos tempor√°rios (*.tmp, *.bak)
- Cache/artefatos de build (__pycache__/, *.pyc, dist/, build/)
- Metadados de IDE (.vscode/, .idea/)
- Dados sens√≠veis ou bin√°rios de modelos (secrets.json, *.pkl, *.onnx, *.pt)
- Backups autom√°ticos
- A pasta mcp_system/
- Relat√≥rios gerados automaticamente (reports/)
- Pastas de legado (legacy/, old_version/) exceto quando alteradas intencionalmente

## Valida√ß√£o antes do commit
Confirme que:
1. ‚úÖ Data est√° no formato YYYY-MM-DD
2. ‚úÖ Todos os arquivos impactados est√£o listados com paths relativos
3. ‚úÖ Tipo √© um dos valores v√°lidos
4. ‚úÖ Se√ß√£o Detalhes est√° preenchida quando aplic√°vel
5. ‚úÖ N√£o h√° informa√ß√µes sens√≠veis nos textos
6. ‚úÖ Entrada foi adicionada ao final do arquivo de hist√≥rico

## Casos especiais
- **Renomea√ß√µes**: Liste como `from -> to` (ex.: `src/utils.py -> src/utils/strings.py`)
- **Exclus√µes**: Marque o arquivo e indique "removido" em Observa√ß√µes
- **Commits at√¥micos**: Prefira uma entrada por mudan√ßa l√≥gica
- **Privacidade**: Jamais copiar conte√∫do sens√≠vel; apenas referencie descritivamente

## ü§ñ Automa√ß√£o e Integra√ß√£o

### **Scripts de Automa√ß√£o:**
```bash
#!/bin/bash
# scripts/generate_history_entry.sh

TYPE=$1
DESCRIPTION=$2
AUTHOR=${3:-"Assistant"}
DATE=$(date +"%Y-%m-%d")

# Gerar entrada baseada no tipo
case $TYPE in
    "bug")
        echo "[$DATE] - $AUTHOR" >> dev_history.md
        echo "A√ß√£o/Tipo: Bug" >> dev_history.md
        echo "Descri√ß√£o: Corrige $DESCRIPTION" >> dev_history.md
        ;;
    "feat")
        echo "[$DATE] - $AUTHOR" >> dev_history.md
        echo "A√ß√£o/Tipo: Melhoria" >> dev_history.md
        echo "Descri√ß√£o: Implementa $DESCRIPTION" >> dev_history.md
        ;;
    "refactor")
        echo "[$DATE] - $AUTHOR" >> dev_history.md
        echo "A√ß√£o/Tipo: Refatora√ß√£o" >> dev_history.md
        echo "Descri√ß√£o: Refatora $DESCRIPTION" >> dev_history.md
        ;;
esac
```

### **Git Hooks:**
```bash
#!/bin/bash
# .git/hooks/pre-commit

# Verificar se dev_history.md foi atualizado
if git diff --cached --name-only | grep -q "dev_history.md"; then
    echo "‚úÖ dev_history.md atualizado"
else
    echo "‚ö†Ô∏è  Lembre-se de atualizar dev_history.md"
fi
```

### **Integra√ß√£o com CI/CD:**
```yaml
# .github/workflows/validate-history.yml
name: Validate History
on: [push, pull_request]

jobs:
  validate-history:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Validate dev_history.md
        run: |
          if [ ! -f "dev_history.md" ]; then
            echo "‚ùå dev_history.md n√£o encontrado"
            exit 1
          fi
          
          # Verificar formato da √∫ltima entrada
          last_entry=$(head -n 10 dev_history.md)
          if [[ $last_entry == *"[$(date +%Y-%m-%d)]"* ]]; then
            echo "‚úÖ Formato da entrada v√°lido"
          else
            echo "‚ùå Formato da entrada inv√°lido"
            exit 1
          fi
```

### **M√©tricas de Qualidade:**
- **Frequ√™ncia**: Entrada para cada commit significativo
- **Completude**: Todas as se√ß√µes preenchidas
- **Consist√™ncia**: Formato padronizado
- **Rastreabilidade**: Links para issues/PRs

### **Ferramentas Recomendadas:**
- **Git hooks**: Valida√ß√£o autom√°tica
- **Scripts bash**: Gera√ß√£o autom√°tica
- **CI/CD**: Valida√ß√£o cont√≠nua
- **Templates**: Padroniza√ß√£o de entradas