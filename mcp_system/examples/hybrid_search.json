{
  "name": "hybrid_search",
  "description": "Busca híbrida BM25 + semântica com controle de peso",
  "request": {
    "jsonrpc": "2.0",
    "method": "search_code",
    "params": {
      "query": "autenticação de usuário com JWT token",
      "top_k": 10,
      "use_semantic": true,
      "semantic_weight": 0.4,
      "filters": {
        "file_type": "python"
      }
    },
    "id": 2
  },
  "expected_response": {
    "results": [
      {
        "chunk_id": "auth_service_py_123",
        "file_path": "src/services/auth_service.py",
        "start_line": 45,
        "end_line": 67,
        "score": 0.876,
        "preview": "def authenticate_user(token: str) -> User:\n    \"\"\"Autentica usuário com token JWT\"\"\"\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=['HS256'])\n        user_id = payload.get('user_id')\n        return get_user_by_id(user_id)\n    except jwt.ExpiredSignatureError:\n        raise AuthenticationError('Token expirado')\n    except jwt.InvalidTokenError:\n        raise AuthenticationError('Token inválido')"
      }
    ],
    "count": 1,
    "status": "success"
  }
}